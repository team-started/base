.backend-linting:
  image: $CI_REGISTRY_IMAGE:backend-$PHP_VERSION
  stage: code-linting
  cache:
    - key: ${CI_COMMIT_REF_SLUG}
      paths:
        - ${BACKEND_DIR}/vendor/
  parallel:
    matrix:
      - PHP_VERSION: ['8.2']
  before_script:
    - mv ${BACKEND_DIR}/composer.json ${BACKEND_DIR}/composer.json.orig
    - mv ${BACKEND_DIR}/composer.lock ${BACKEND_DIR}/composer.lock.orig
    - cp .build/composer/composer.testing.json ${BACKEND_DIR}/composer.json
    - rm -rf ${BACKEND_DIR}/vendor/ ${BACKEND_DIR}/var/
    - php -v | grep '^PHP';
    - |
      composer require --no-ansi --no-interaction --no-progress --no-install \
        typo3/cms-core:^12.4.19 \
        typo3/cms-backend:^12.4.19 \
        typo3/cms-frontend:^12.4.19 \
        typo3/cms-install:^12.4.19 \
        typo3/cms-fluid:^12.4.19 \
        -d app/backend
      composer update --no-ansi --no-interaction --no-progress --with-dependencies -d ${BACKEND_DIR};
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

stages:
  - code-linting

###
# Rector with PHP and TYPO3 rules
###
backend:rector:
  extends: .backend-linting
  script:
    - composer run ci:php:rector -d ${BACKEND_DIR}

###
# Lint PHP code with php-cs-fixer
# see https://github.com/FriendsOfPhp/PHP-CS-Fixer
###
backend:phpCsFixer:
  extends: .backend-linting
  script:
    - composer run ci:php:cs -d ${BACKEND_DIR}

###
# PHPStan finds bugs in your code without writing tests
# see https://phpstan.org/
###
backend:phpStan:
  extends: .backend-linting
  script:
    - composer run ci:php:stan -d ${BACKEND_DIR}
